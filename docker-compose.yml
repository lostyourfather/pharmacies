version: '3.4'


x-airflow-common:
  &airflow-common
  build: .
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@db:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    - PYTHONPATH=$AIRFLOW_HOME/pharmacies:$PYTHONPATH
  volumes:
    - ./etl/dags:/opt/airflow/dags
    - ./etl/pharmacies:/opt/airflow/pharmacies
    - ./api/models:/opt/airflow/models
    - ./etl/airflow-data/logs:/opt/airflow/logs
    - ./etl/airflow-data/plugins:/opt/airflow/plugins
    - ./etl/airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
  depends_on:
    - db

services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    environment:
      - "MINIO_ACCESS_KEY=minioadmin"
      - "MINIO_SECRET_KEY=minioadmin"
      - "MINIO_SERVER_URL=http://minio:9000"
      - "MINIO_BROWSER_REDIRECT_URL=http://localhost:9001"
    command: server /data --console-address ":9001"
    container_name: pharmacies_minio

  create_bucket:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./miniodata:/data
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc rm -r --force myminio/scribe-dev-filetransfers;
      /usr/bin/mc mb myminio/pharmacies;
      /usr/bin/mc policy download myminio/pharmacies;
      /usr/bin/mc cp -r data/ myminio;
      exit 0;
      "

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airflow
      - POSTGRES_PORT=5432
    ports:
      - '5432:5432'
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./alembic/create_db.sql:/docker-entrypoint-initdb.d/create_user_and_schema.sql
    container_name: pharmacies_database
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d airflow'" ]
      interval: 30s
      timeout: 60s
      retries: 10

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - ( airflow db migrate &&
        airflow users create
        --role Admin
        --username airflow
        --password airflow
        --email airflow@airflow.com
        --firstname airflow
        --lastname airflow )
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - 8070:8080
    container_name: airflow_webserver
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  api:
    build: app
    ports:
      - 80:80
    restart: always
    container_name: pharmacies_api
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app

  bot:
    build: ./bot
    restart: always
    container_name: pharmacies_bot
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./bot:/bot
      - ./app/models:/bot/models